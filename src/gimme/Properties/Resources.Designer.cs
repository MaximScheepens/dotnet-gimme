//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gimme.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("gimme.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.ComponentModel;
        ///using System.Net;
        ///using System.Threading.Tasks;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Commands = {{appnamespace}}.YourApplicationGroupHere.Commands;
        ///using Models = {{appnamespace}}.YourApplicationGroupHere.Models;
        ///using Queries = {{appnamespace}}.YourApplicationGroupHere.Queries;
        ///
        ///namespace {{namespace}}
        ///{
        ///    [Route (&quot;api/[controller]&quot;)]
        ///    public class {{name}} : MediatorController {
        ///
        ///        [HttpGet]
        ///        [DescriptionAttribute (&quot;Your endpoint description go [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Api_Controller {
            get {
                return ResourceManager.GetString("Api_Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using NJsonSchema.Annotations;
        ///using MediatR;
        ///
        ///namespace {{namespace}}
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Command
        ///    /// &lt;/summary&gt;
        ///    [JsonSchema(&quot;{{name}}Command&quot;)]
        ///    public class Command : IRequest&lt;Response&gt;
        ///    {
        ///    }
        ///
        ///    /// &lt;summary&gt;
        ///    /// Command Handler
        ///    /// &lt;/summary&gt;
        ///    public class CommandHandler : IRequestHandler&lt;Command, Response&gt;
        ///    {
        ///        public CommandHandler() [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string App_Command {
            get {
                return ResourceManager.GetString("App_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using FluentValidation;
        ///
        ///namespace {{namespace}}
        ///{
        ///    public class CommandValidator : AbstractValidator&lt;Command&gt;
        ///    {
        ///        public CommandValidator()
        ///        {
        ///
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string App_Command_Validator {
            get {
                return ResourceManager.GetString("App_Command_Validator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace {{namespace}} {
        ///    public class {{name}} : Exception {
        ///        public {{name}} (string value) : base ($&quot;Your exception message goes here. &apos;{value}&apos; &quot;) { }
        ///    }
        ///}.
        /// </summary>
        internal static string App_Exception {
            get {
                return ResourceManager.GetString("App_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace {{namespace}}
        ///{
        ///    public class {{name}}
        ///    {
        ///        public {{name}}()
        ///        {
        ///
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string App_Model {
            get {
                return ResourceManager.GetString("App_Model", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using NJsonSchema.Annotations;
        ///using MediatR;
        ///
        ///namespace {{namespace}}
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Query
        ///    /// &lt;/summary&gt;
        ///    [JsonSchema(&quot;{{name}}Query&quot;)]
        ///    public class Query : IRequest&lt;Model&gt;
        ///    {
        ///    }
        ///
        ///    /// &lt;summary&gt;
        ///    /// Query Handler
        ///    /// &lt;/summary&gt;
        ///    public class QueryHandler : IRequestHandler&lt;Query, Model&gt;
        ///    {
        ///        public QueryHandler()
        ///        {
        ///
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string App_Query {
            get {
                return ResourceManager.GetString("App_Query", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Name&quot;:  &quot;{{name}}&quot;,
        ///  &quot;Projects&quot; :  {
        ///    &quot;WebApi&quot;: &quot;{{name}}.Api&quot;,
        ///    &quot;Application&quot;: &quot;{{name}}.Application&quot;,
        ///    &quot;ApplicationUnitTest&quot;: &quot;{{name}}.ApplicationUnitTest&quot;
        ///  }
        ///}.
        /// </summary>
        internal static string GimmeSettings {
            get {
                return ResourceManager.GetString("GimmeSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Microsoft.AspNetCore.Mvc.Filters;
        ///
        ///namespace {{solutionname}}.Api.Filters {
        ///    [AttributeUsage (AttributeTargets.Method)]
        ///    public class ActionValidationFilterAttribute : ActionFilterAttribute {
        ///        public override void OnActionExecuting (ActionExecutingContext context) {
        ///            if (!context.ModelState.IsValid) {
        ///                context.Result = new BadRequestObjectResult (context.ModelState);
        ///            }
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string WAS_Api_ActionValidationFilterAttribute {
            get {
                return ResourceManager.GetString("WAS_Api_ActionValidationFilterAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AutoMapper;
        ///using Microsoft.Extensions.DependencyInjection;
        ///
        ///namespace {{solutionname}}.Api.Configurations
        ///{
        ///    public static class AutoMapper {
        ///        internal static void RegisterAutoMapper (IServiceCollection services) {
        ///            //http://docs.automapper.org/en/stable/Inline-Mapping.html
        ///            services.AddAutoMapper(
        ///                configAction =&gt;
        ///                {
        ///                    configAction.ValidateInlineMaps = false;
        ///                },
        ///                typeof(Applicati [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_Conf_AutoMapper {
            get {
                return ResourceManager.GetString("WAS_Api_Conf_AutoMapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Linq;
        ///using Microsoft.EntityFrameworkCore;
        ///using Microsoft.Extensions.Configuration;
        ///using Microsoft.Extensions.DependencyInjection;
        ///using {{solutionname}}.Persistence.Context;
        ///
        ///namespace {{solutionname}}.Api.Configurations
        ///{
        ///    public static class Db
        ///    {
        ///        internal static void RegisterEntityFramework(IServiceCollection services, IConfiguration configuration)
        ///        {
        ///            services.AddDbContext&lt;{{solutionname}}DbContext&gt;(opts =&gt;
        ///            {
        ///                opts. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_Conf_Db {
            get {
                return ResourceManager.GetString("WAS_Api_Conf_Db", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using FluentValidation.AspNetCore;
        ///using Microsoft.Extensions.DependencyInjection;
        ///
        ///namespace {{solutionname}}.Api.Configurations
        ///{
        ///    public static class FluentValidation {
        ///        /// &lt;summary&gt;
        ///        /// Add Fluent Validation
        ///        /// &lt;/summary&gt;
        ///        /// &lt;param name=&quot;mvcBuilder&quot;&gt;Mvc builder.&lt;/param&gt;
        ///        internal static void AddFluentValidation (IMvcBuilder mvcBuilder) {
        ///            mvcBuilder.AddFluentValidation (fv =&gt; {
        ///                fv.RegisterValidatorsFromAssemblyContaining&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_Conf_FluentValidation {
            get {
                return ResourceManager.GetString("WAS_Api_Conf_FluentValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using MediatR;
        ///using Microsoft.Extensions.DependencyInjection;
        ///
        ///namespace {{solutionname}}.Api.Configurations
        ///{
        ///    public static class MediatR {
        ///        /// &lt;summary&gt;
        ///        /// Registers MediatR - All command and query in the &apos;Application&apos;
        ///        /// &lt;/summary&gt;
        ///        /// &lt;param name=&quot;services&quot;&gt;Services.&lt;/param&gt;
        ///        internal static void RegisterMediatR (IServiceCollection services) {
        ///            services.AddMediatR (typeof (Application.Exceptions.RecordNotFoundException).Assembly);
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_Conf_MediatR {
            get {
                return ResourceManager.GetString("WAS_Api_Conf_MediatR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNetCore.Builder;
        ///using Microsoft.Extensions.DependencyInjection;
        ///using Newtonsoft.Json.Serialization;
        ///using {{solutionname}}.Api.Filters;
        ///
        ///namespace {{solutionname}}.Api.Configurations
        ///{
        ///    public static class Mvc {
        ///        /// &lt;summary&gt;
        ///        /// Registers the mvc.
        ///        /// &lt;/summary&gt;
        ///        /// &lt;returns&gt;The mvc.&lt;/returns&gt;
        ///        /// &lt;param name=&quot;services&quot;&gt;Services.&lt;/param&gt;
        ///        internal static IMvcBuilder RegisterMvc (IServiceCollection services) {
        ///            r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_Conf_Mvc {
            get {
                return ResourceManager.GetString("WAS_Api_Conf_Mvc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Linq;
        ///using Microsoft.AspNetCore.Builder;
        ///using Microsoft.Extensions.DependencyInjection;
        ///using NSwag;
        ///using NSwag.AspNetCore;
        ///using NSwag.SwaggerGeneration.Processors.Security;
        ///
        ///
        ///
        ///namespace {{solutionname}}.Api.Configurations {
        ///
        ///    public static class Swagger
        ///    {
        ///        /// &lt;summary&gt;
        ///        /// Register Swagger
        ///        /// &lt;/summary&gt;
        ///        internal static void RegisterSwagger(IServiceCollection services)
        ///        {
        ///            services.AddSwaggerDocument(c =&gt;
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_Conf_Swagger {
            get {
                return ResourceManager.GetString("WAS_Api_Conf_Swagger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Net;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Microsoft.AspNetCore.Mvc.Filters;
        ///using {{solutionname}}.Application.Exceptions;
        ///
        ///namespace {{solutionname}}.Api.Filters {
        ///    /// &lt;summary&gt;
        ///    /// A filter attribute applied in all controller methods
        ///    /// This is where we handle CustomExceptions. Return the correct status code based on Exception Type
        ///    /// &lt;/summary&gt;
        ///    [AttributeUsage (AttributeTargets.Method)]
        ///    public class CustomExceptionFilterAttribute : Excepti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_CustomExceptionFilterAttribute {
            get {
                return ResourceManager.GetString("WAS_Api_CustomExceptionFilterAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNetCore.Mvc;
        ///
        ///namespace {{solutionname}}.Api.Controllers
        ///{
        ///    [ApiExplorerSettings(IgnoreApi = true)]
        ///    public class HomeController : Controller
        ///    {
        ///        public RedirectResult Index()
        ///        {
        ///            return this.Redirect(&quot;/swagger&quot;);
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string WAS_Api_HomeController {
            get {
                return ResourceManager.GetString("WAS_Api_HomeController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using MediatR;
        ///using Microsoft.AspNetCore.Http;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Microsoft.Extensions.DependencyInjection;
        ///
        ///namespace {{solutionname}}.Api.Controllers
        ///{
        ///    [ApiController]
        ///    public abstract class MediatorController : ControllerBase
        ///    {
        ///        private IMediator _mediator;
        ///
        ///        protected IMediator Mediator
        ///        {
        ///            get
        ///            {
        ///                return _mediator ?? (_mediator = HttpContext.RequestServices.GetService&lt;IMediator&gt;());
        ///            }
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_MediatorController {
            get {
                return ResourceManager.GetString("WAS_Api_MediatorController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Microsoft.AspNetCore.Builder;
        ///using Microsoft.AspNetCore.Hosting;
        ///using Microsoft.Extensions.Configuration;
        ///using Microsoft.Extensions.DependencyInjection;
        ///using static {{solutionname}}.Api.Configurations.AutoMapper;
        ///using static {{solutionname}}.Api.Configurations.FluentValidation;
        ///using static {{solutionname}}.Api.Configurations.MediatR;
        ///using static {{solutionname}}.Api.Configurations.Mvc;
        ///using static {{solutionname}}.Api.Configurations.Swagger;
        ///using static {{solutionname} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Api_Startup {
            get {
                return ResourceManager.GetString("WAS_Api_Startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace {{solutionname}}.Application.Exceptions {
        ///    public class RecordAlreadyExistsException : Exception {
        ///        public RecordAlreadyExistsException (string message) : base (message) { }
        ///    }
        ///}.
        /// </summary>
        internal static string WAS_App_RecordAlreadyExistsException {
            get {
                return ResourceManager.GetString("WAS_App_RecordAlreadyExistsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace {{solutionname}}.Application.Exceptions {
        ///    public class RecordNotFoundException : Exception {
        ///        public RecordNotFoundException (string name, object key) : base ($&quot;Could not find record for Entity &apos;{name}&apos; with Id of {key}&quot;) {
        ///        }
        ///        public RecordNotFoundException (string message) : base (message) {
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string WAS_App_RecordNotFoundException {
            get {
                return ResourceManager.GetString("WAS_App_RecordNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace {{solutionname}}.Application
        ///{
        ///    public abstract class Response
        ///    {
        ///        protected Response(string message = null)
        ///        {
        ///            Message = message;
        ///        }
        ///        public string Message { get; set; }
        ///    }
        ///
        ///    public class NotFoundResponse : Response
        ///    {
        ///        public NotFoundResponse(string message = null) : base(message)
        ///        {
        ///        }
        ///    }
        ///
        ///    public class BadRequestResponse : Response
        ///    {
        ///        public BadRequestResponse(string message = null) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_App_Response {
            get {
                return ResourceManager.GetString("WAS_App_Response", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Logging&quot;: {
        ///    &quot;LogLevel&quot;: {
        ///      &quot;Default&quot;: &quot;Warning&quot;
        ///    }
        ///  },
        ///  &quot;AllowedHosts&quot;: &quot;*&quot;,
        ///  &quot;ConnectionStrings&quot;: {
        ///    &quot;Default&quot;: &quot;Data Source=localhost; Initial Catalog={{solutionname}}_Db; UID=&lt;YOURUSERNAMEHERE&gt;; password=&lt;YOURPASSWORDHERE&gt;&quot;
        ///  }
        ///}
        ///.
        /// </summary>
        internal static string WAS_AppSettingsJson {
            get {
                return ResourceManager.GetString("WAS_AppSettingsJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace {{solutionname}}.Domain.Entities
        ///{
        ///    public abstract class BaseEntity
        ///    {
        ///        public BaseEntity() 
        ///        {
        ///        }
        ///        public int Id { get; set; }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string WAS_Domain_BaseEntity {
            get {
                return ResourceManager.GetString("WAS_Domain_BaseEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Ignore Visual Studio temporary files, build results, and
        ///## files generated by popular Visual Studio add-ons.
        ///##
        ///## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore
        ///
        ///# User-specific files
        ///*.suo
        ///*.user
        ///*.userosscache
        ///*.sln.docstates
        ///
        ///# User-specific files (MonoDevelop/Xamarin Studio)
        ///*.userprefs
        ///
        ///# Build results
        ///[Dd]ebug/
        ///[Dd]ebugPublic/
        ///[Rr]elease/
        ///[Rr]eleases/
        ///x64/
        ///x86/
        ///bld/
        ///[Bb]in/
        ///[Oo]bj/
        ///[Ll]og/
        ///
        ///# Visual Studio 2015/2017 cache/options d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_GitIgnore {
            get {
                return ResourceManager.GetString("WAS_GitIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.EntityFrameworkCore;
        ///
        ///namespace {{solutionname}}.Persistence.Context
        ///{
        ///    public class {{solutionname}}DbContext : Microsoft.EntityFrameworkCore.DbContext
        ///    {
        ///        public {{solutionname}}DbContext(DbContextOptions&lt;{{solutionname}}DbContext&gt; options) : base(options)
        ///        {
        ///        }
        ///        protected override void OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder)
        ///        {
        ///            base.OnModelCreating(modelBuilder);
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string WAS_Persistence_DbContext {
            get {
                return ResourceManager.GetString("WAS_Persistence_DbContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.IO;
        ///using Microsoft.EntityFrameworkCore;
        ///using Microsoft.EntityFrameworkCore.Design;
        ///using Microsoft.Extensions.Configuration;
        ///
        ///namespace {{solutionname}}.Persistence.Context {
        ///    public class {{solutionname}}DbContextFactory : IDesignTimeDbContextFactory&lt;{{solutionname}}DbContext&gt; {
        ///        public static IConfigurationRoot Configuration { get; set; }
        ///        public {{solutionname}}DbContextFactory () {
        ///            var builder = new ConfigurationBuilder ()
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WAS_Persistence_DbContextFactory {
            get {
                return ResourceManager.GetString("WAS_Persistence_DbContextFactory", resourceCulture);
            }
        }
    }
}
